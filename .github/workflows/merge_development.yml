name: Build and Deploy to DEV

on:
  push:
    branches: [ development ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Build with Maven
      run: mvn -B package --settings .maven/settings.xml --file pom.xml -DskipMunitTests
      env:
        GITHUB_TOKEN: ${{ secrets.MAVEN_REPO_GITHUB_TOKEN }}
        nexus_username: ${{ secrets.anypoint_platform_username }}
        nexus_password: ${{ secrets.anypoint_platform_password }}
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Deploy to DEV
      env:
        APP_NAME: ${{ secrets.app_name }}
        USERNAME: ${{ secrets.anypoint_platform_username }}
        PASSWORD: ${{ secrets.anypoint_platform_password }}
        KEY: ${{ secrets.decryption_key }}
        ORG_ID: ${{ secrets.anypoint_organization_id }}
        AP_CLIENT_ID: ${{ secrets.anypoint_platform_client_id }}
        AP_CLIENT_SECRET: ${{ secrets.anypoint_platform_client_secret }}
        WORKER_TYPE: ${{ secrets.anypoint_worker_type }}
        REGION: ${{ secrets.anypoint_region }}
        WORKERS_NUMBER: ${{ secrets.anypoint_workers_number }}
        OS2: ${{ secrets.anypoint_os2_enabled }}
        AP_ENV: "DEV"
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DskipMunitTests -DmuleDeploy \
         -Dapp.name="$APP_NAME" \
         -Danypoint.organizationId="$ORG_ID" \
         -Danypoint.platform.client_id="$AP_CLIENT_ID" \
         -Danypoint.platform.client_secret="$AP_CLIENT_SECRET" \
         -Danypoint.env="$AP_ENV" \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
         -Danypoint.workerType="$WORKER_TYPE" \
         -Danypoint.region="$REGION" \
         -Danypoint.workers="$WORKERS_NUMBER" \
         -Danypoint.useObjectStoreV2="$OS2" \
         -Ddecryption.key="$KEY"